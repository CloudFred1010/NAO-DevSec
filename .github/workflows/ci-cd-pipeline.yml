name: Secure DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ "main", "Devsec-01" ]
  pull_request:
    branches: [ "main", "Devsec-01" ]
  workflow_dispatch:

permissions:
  contents: read   # ✅ Restrict default GITHUB_TOKEN permissions

jobs:

  # ---------------------------
  # Commit Stage – Hygiene & Tests
  # ---------------------------
  commit-stage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Pre-Commit and Run Hooks
        run: |
          pip install pre-commit
          pre-commit run --all-files

      - name: Run Unit Tests
        working-directory: app/juice-shop   # ✅ root of Juice Shop
        run: |
          npm install --legacy-peer-deps
          npm test

  # ---------------------------
  # Security Stage – SAST / SCA / IaC / Container
  # ---------------------------
  security-stage:
    runs-on: ubuntu-latest
    needs: commit-stage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Software Composition Analysis (SCA) ---
      - name: Run Snyk SCA
        uses: snyk/actions/node@master
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # --- Infrastructure as Code (Terraform) ---
      - name: Run Checkov (IaC Scan)
        working-directory: iac
        run: |
          pip install checkov==3.2.467
          checkov -d . --quiet

      # --- Container Image Scan ---
      - name: Run Trivy (Container Scan)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.ACR_LOGIN_SERVER }}/juice-shop:${{ github.sha }}
          format: table

      # --- SBOM Generation ---
      - name: Generate SBOM (Syft)
        uses: anchore/syft-action@v0.15.0
        with:
          image: ${{ secrets.ACR_LOGIN_SERVER }}/juice-shop:${{ github.sha }}
          output-file: pipelines/security-reports/sbom.json

  # ---------------------------
  # Build & Deploy Stage
  # ---------------------------
  build-deploy:
    runs-on: ubuntu-latest
    needs: security-stage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} \
          -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/juice-shop:${{ github.sha }} ./app/juice-shop
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/juice-shop:${{ github.sha }}

      - name: Terraform Deploy
        working-directory: iac
        run: |
          terraform init
          terraform validate
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

  # ---------------------------
  # Post-Deploy Stage – DAST / Policy
  # ---------------------------
  post-deploy:
    runs-on: ubuntu-latest
    needs: build-deploy
    steps:
      # --- DAST ---
      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: https://nao-juice-shop.azurewebsites.net

      # --- Azure Policy Compliance ---
      - name: Azure Policy Compliance Check
        run: |
          az policy state summarize \
            --subscription ${{ secrets.SUBSCRIPTION_ID }} \
            --query "summaryResults"
